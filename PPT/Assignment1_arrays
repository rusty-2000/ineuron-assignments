1.  class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        dict={}
        for i,a in enumerate(nums):
            if target-a in dict:
                
                return [dict[target-a],i]
            dict[a]=i


2.   def removeElement(self, nums: List[int], val: int) -> int:
        n=nums.count(val)
        for i in range(n):
            nums.remove(val)
        return len(nums)
        
        
 3.  l,r=0,len(nums)-1
        while l<=r:
            mid=(l+r)//2
         
            if nums[mid]==target:
                return mid
               
            elif nums[mid]<target:
                l+=1
            elif nums[mid]>target:
                r-=1   
        return l
        
        
  4. res=digits[0]
        a=1
        while a<len(digits):
            res=res*10+digits[a]
            a+=1
        res+=1
        res = list(map(int, str(res)))
        return res
        
        
   5. last=m+n-1
        while m>0 and n>0:
            if nums1[m-1]>nums2[n-1]:
                nums1[last]=nums1[m-1]
                m-=1
            else:
                nums1[last]=nums2[n-1]
                n-=1
            last-=1
        while n>0:
            nums1[last]=nums2[n-1]
            n,last=n-1,last-1
            
            
 6.   hashset={}
        for i in nums:
            if i in hashset:
                return True
            
            hashset[i]=1
        return False


7.      l=0
        for r in range(len(nums)):
            if nums[r]:
                nums[l],nums[r]=nums[r],nums[l]
                l+=1
              
              
8.  n=len(nums)
        ap=n*(n+1)//2
        miss=ap-sum(set(nums))
        dup=sum(nums)-ap+miss
        return [dup,miss]
                
           
        
