1.  def arrayPairSum(self, nums: List[int]) -> int:
        nums.sort()
        res=0
        for i in range(0,len(nums),2):
            res+=nums[i]
        return res

2.   def distributeCandies(self, candyType: List[int]) -> int:
        
        n=len(candyType)//2
        hashset=set(candyType)
        if n<len(hashset):
            return n
        else:
            return len(hashset)
            
3.  def findLHS(self, nums: List[int]) -> int:
        hashmap={}
        count=0
        for i in nums:
            if i in hashmap:
                hashmap[i]+=1
            else:
                hashmap[i]=1
        if len(hashmap)<=1:
            return 0
        for k in hashmap:
            if k+1 in hashmap:
                count=max(count,hashmap[k]+hashmap[k+1])
        return count
        
        
        
  4.  def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        flowerbed=[0] + flowerbed +[0]
        for i in range(1,len(flowerbed)-1):
            if flowerbed[i-1]==0 and flowerbed[i+1]==0 and flowerbed[i]==0:
                flowerbed[i]=1
                n-=1
        return n<=0
        
        
        
5.    def maximumProduct(self, nums: List[int]) -> int:
        nums.sort()
        n=len(nums)
        a= nums[n-1]*nums[n-2]*nums[n-3]
        b=nums[0]*nums[1]*nums[-1]
        return max(a,b)
        
        
6. def search(self, nums: List[int], target: int) -> int:
        left,right=0,len(nums)-1
        while left<=right:
            mid=left+(right-left)//2
            if nums[mid]>target:
                right=mid-1
            elif nums[mid]<target:
                left=mid+1
            else:
                return mid
        return -1
        
        
        
7.def isMonotonic(self, A: List[int]) -> bool:
        increase = True
        decrease = True
        
        for i in range(len(A)-1):
            
            if A[i] > A[i+1]:
                increase = False
                
            if A[i] < A[i+1]:
                decrease = False
                
        return increase or decrease
        
        
        
8.  minimum=nums[0]
        maximum=nums[0]
        for i in range(len(nums)):
            minimum=min(minimum,nums[i])
            maximum=max(maximum,nums[i])
        if minimum+k>=maximum-k:
            return 0
        
        return (maximum-k)-(minimum+k)        
